// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/math.proto

#include <xrpc/proto/math.pb.h>

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xrpc {
namespace math {

inline constexpr MathResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MathResponse::MathResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MathResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MathResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MathResponseDefaultTypeInternal() {}
  union {
    MathResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MathResponseDefaultTypeInternal _MathResponse_default_instance_;

inline constexpr Arguments::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lhs_{0},
        rhs_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Arguments::Arguments(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArgumentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArgumentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArgumentsDefaultTypeInternal() {}
  union {
    Arguments _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArgumentsDefaultTypeInternal _Arguments_default_instance_;

inline constexpr MathRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        arguments_{nullptr},
        operation_{static_cast< ::xrpc::math::MathOperation >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MathRequest::MathRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MathRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MathRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MathRequestDefaultTypeInternal() {}
  union {
    MathRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MathRequestDefaultTypeInternal _MathRequest_default_instance_;
}  // namespace math
}  // namespace xrpc
static ::_pb::Metadata file_level_metadata_src_2fproto_2fmath_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_src_2fproto_2fmath_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_src_2fproto_2fmath_2eproto = nullptr;
const ::uint32_t TableStruct_src_2fproto_2fmath_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xrpc::math::Arguments, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xrpc::math::Arguments, _impl_.lhs_),
    PROTOBUF_FIELD_OFFSET(::xrpc::math::Arguments, _impl_.rhs_),
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathRequest, _impl_.arguments_),
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathRequest, _impl_.operation_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xrpc::math::MathResponse, _impl_.result_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xrpc::math::Arguments)},
        {10, 20, -1, sizeof(::xrpc::math::MathRequest)},
        {22, 31, -1, sizeof(::xrpc::math::MathResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xrpc::math::_Arguments_default_instance_._instance,
    &::xrpc::math::_MathRequest_default_instance_._instance,
    &::xrpc::math::_MathResponse_default_instance_._instance,
};
const char descriptor_table_protodef_src_2fproto_2fmath_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\024src/proto/math.proto\022\txrpc.math\"%\n\tArg"
    "uments\022\013\n\003lhs\030\001 \001(\002\022\013\n\003rhs\030\002 \001(\002\"c\n\013Math"
    "Request\022\'\n\targuments\030\001 \001(\0132\024.xrpc.math.A"
    "rguments\022+\n\toperation\030\002 \001(\0162\030.xrpc.math."
    "MathOperation\".\n\014MathResponse\022\023\n\006result\030"
    "\001 \001(\002H\000\210\001\001B\t\n\007_result*@\n\rMathOperation\022\007"
    "\n\003Add\020\000\022\014\n\010Subtract\020\001\022\014\n\010Multiply\020\002\022\n\n\006D"
    "ivide\020\0032O\n\013MathService\022@\n\rCalculateMath\022"
    "\026.xrpc.math.MathRequest\032\027.xrpc.math.Math"
    "Responseb\006proto3"
};
static ::absl::once_flag descriptor_table_src_2fproto_2fmath_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_src_2fproto_2fmath_2eproto = {
    false,
    false,
    376,
    descriptor_table_protodef_src_2fproto_2fmath_2eproto,
    "src/proto/math.proto",
    &descriptor_table_src_2fproto_2fmath_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_src_2fproto_2fmath_2eproto::offsets,
    file_level_metadata_src_2fproto_2fmath_2eproto,
    file_level_enum_descriptors_src_2fproto_2fmath_2eproto,
    file_level_service_descriptors_src_2fproto_2fmath_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_src_2fproto_2fmath_2eproto_getter() {
  return &descriptor_table_src_2fproto_2fmath_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_src_2fproto_2fmath_2eproto(&descriptor_table_src_2fproto_2fmath_2eproto);
namespace xrpc {
namespace math {
const ::google::protobuf::EnumDescriptor* MathOperation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2fproto_2fmath_2eproto);
  return file_level_enum_descriptors_src_2fproto_2fmath_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MathOperation_internal_data_[] = {
    262144u, 0u, };
bool MathOperation_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Arguments::_Internal {
 public:
};

Arguments::Arguments(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xrpc.math.Arguments)
}
Arguments::Arguments(
    ::google::protobuf::Arena* arena, const Arguments& from)
    : Arguments(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Arguments::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Arguments::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, rhs_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::rhs_));
}
Arguments::~Arguments() {
  // @@protoc_insertion_point(destructor:xrpc.math.Arguments)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Arguments::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Arguments::Clear() {
// @@protoc_insertion_point(message_clear_start:xrpc.math.Arguments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lhs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rhs_) -
      reinterpret_cast<char*>(&_impl_.lhs_)) + sizeof(_impl_.rhs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Arguments::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Arguments::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Arguments_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float rhs = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.rhs_)}},
    // float lhs = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.lhs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float lhs = 1;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.lhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float rhs = 2;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.rhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Arguments::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xrpc.math.Arguments)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float lhs = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lhs = this->_internal_lhs();
  ::uint32_t raw_lhs;
  memcpy(&raw_lhs, &tmp_lhs, sizeof(tmp_lhs));
  if (raw_lhs != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_lhs(), target);
  }

  // float rhs = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rhs = this->_internal_rhs();
  ::uint32_t raw_rhs;
  memcpy(&raw_rhs, &tmp_rhs, sizeof(tmp_rhs));
  if (raw_rhs != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_rhs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrpc.math.Arguments)
  return target;
}

::size_t Arguments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrpc.math.Arguments)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float lhs = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lhs = this->_internal_lhs();
  ::uint32_t raw_lhs;
  memcpy(&raw_lhs, &tmp_lhs, sizeof(tmp_lhs));
  if (raw_lhs != 0) {
    total_size += 5;
  }

  // float rhs = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rhs = this->_internal_rhs();
  ::uint32_t raw_rhs;
  memcpy(&raw_rhs, &tmp_rhs, sizeof(tmp_rhs));
  if (raw_rhs != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Arguments::_class_data_ = {
    Arguments::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Arguments::GetClassData() const {
  return &_class_data_;
}

void Arguments::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Arguments*>(&to_msg);
  auto& from = static_cast<const Arguments&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xrpc.math.Arguments)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lhs = from._internal_lhs();
  ::uint32_t raw_lhs;
  memcpy(&raw_lhs, &tmp_lhs, sizeof(tmp_lhs));
  if (raw_lhs != 0) {
    _this->_internal_set_lhs(from._internal_lhs());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rhs = from._internal_rhs();
  ::uint32_t raw_rhs;
  memcpy(&raw_rhs, &tmp_rhs, sizeof(tmp_rhs));
  if (raw_rhs != 0) {
    _this->_internal_set_rhs(from._internal_rhs());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Arguments::CopyFrom(const Arguments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrpc.math.Arguments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Arguments::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Arguments::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Arguments::InternalSwap(Arguments* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Arguments, _impl_.rhs_)
      + sizeof(Arguments::_impl_.rhs_)
      - PROTOBUF_FIELD_OFFSET(Arguments, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata Arguments::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fmath_2eproto_getter, &descriptor_table_src_2fproto_2fmath_2eproto_once,
      file_level_metadata_src_2fproto_2fmath_2eproto[0]);
}
// ===================================================================

class MathRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MathRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MathRequest, _impl_._has_bits_);
  static const ::xrpc::math::Arguments& arguments(const MathRequest* msg);
  static void set_has_arguments(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::xrpc::math::Arguments& MathRequest::_Internal::arguments(const MathRequest* msg) {
  return *msg->_impl_.arguments_;
}
MathRequest::MathRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xrpc.math.MathRequest)
}
inline PROTOBUF_NDEBUG_INLINE MathRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MathRequest::MathRequest(
    ::google::protobuf::Arena* arena,
    const MathRequest& from)
    : ::google::protobuf::Message(arena) {
  MathRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.arguments_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::xrpc::math::Arguments>(arena, *from._impl_.arguments_)
                : nullptr;
  _impl_.operation_ = from._impl_.operation_;

  // @@protoc_insertion_point(copy_constructor:xrpc.math.MathRequest)
}
inline PROTOBUF_NDEBUG_INLINE MathRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MathRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, arguments_),
           0,
           offsetof(Impl_, operation_) -
               offsetof(Impl_, arguments_) +
               sizeof(Impl_::operation_));
}
MathRequest::~MathRequest() {
  // @@protoc_insertion_point(destructor:xrpc.math.MathRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MathRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.arguments_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xrpc.math.MathRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.arguments_ != nullptr);
    _impl_.arguments_->Clear();
  }
  _impl_.operation_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MathRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> MathRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MathRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MathRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .xrpc.math.MathOperation operation = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MathRequest, _impl_.operation_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.operation_)}},
    // .xrpc.math.Arguments arguments = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.arguments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .xrpc.math.Arguments arguments = 1;
    {PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.arguments_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xrpc.math.MathOperation operation = 2;
    {PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.operation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xrpc::math::Arguments>()},
  }}, {{
  }},
};

::uint8_t* MathRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xrpc.math.MathRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .xrpc.math.Arguments arguments = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::arguments(this),
        _Internal::arguments(this).GetCachedSize(), target, stream);
  }

  // .xrpc.math.MathOperation operation = 2;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrpc.math.MathRequest)
  return target;
}

::size_t MathRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrpc.math.MathRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .xrpc.math.Arguments arguments = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arguments_);
  }

  // .xrpc.math.MathOperation operation = 2;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MathRequest::_class_data_ = {
    MathRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MathRequest::GetClassData() const {
  return &_class_data_;
}

void MathRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MathRequest*>(&to_msg);
  auto& from = static_cast<const MathRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xrpc.math.MathRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_arguments()->::xrpc::math::Arguments::MergeFrom(
        from._internal_arguments());
  }
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MathRequest::CopyFrom(const MathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrpc.math.MathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MathRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MathRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MathRequest::InternalSwap(MathRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.operation_)
      + sizeof(MathRequest::_impl_.operation_)
      - PROTOBUF_FIELD_OFFSET(MathRequest, _impl_.arguments_)>(
          reinterpret_cast<char*>(&_impl_.arguments_),
          reinterpret_cast<char*>(&other->_impl_.arguments_));
}

::google::protobuf::Metadata MathRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fmath_2eproto_getter, &descriptor_table_src_2fproto_2fmath_2eproto_once,
      file_level_metadata_src_2fproto_2fmath_2eproto[1]);
}
// ===================================================================

class MathResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MathResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MathResponse, _impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MathResponse::MathResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xrpc.math.MathResponse)
}
MathResponse::MathResponse(
    ::google::protobuf::Arena* arena, const MathResponse& from)
    : MathResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MathResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MathResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
MathResponse::~MathResponse() {
  // @@protoc_insertion_point(destructor:xrpc.math.MathResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MathResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MathResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xrpc.math.MathResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MathResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MathResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MathResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MathResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float result = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(MathResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float result = 1;
    {PROTOBUF_FIELD_OFFSET(MathResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MathResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xrpc.math.MathResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xrpc.math.MathResponse)
  return target;
}

::size_t MathResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xrpc.math.MathResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional float result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MathResponse::_class_data_ = {
    MathResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MathResponse::GetClassData() const {
  return &_class_data_;
}

void MathResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MathResponse*>(&to_msg);
  auto& from = static_cast<const MathResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xrpc.math.MathResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MathResponse::CopyFrom(const MathResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xrpc.math.MathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MathResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MathResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MathResponse::InternalSwap(MathResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata MathResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fproto_2fmath_2eproto_getter, &descriptor_table_src_2fproto_2fmath_2eproto_once,
      file_level_metadata_src_2fproto_2fmath_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace math
}  // namespace xrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
